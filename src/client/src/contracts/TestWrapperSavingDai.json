{
  "contractName": "TestWrapperSavingDai",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "daiJoin",
      "outputs": [
        {
          "internalType": "contract JoinLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract GemLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "dsrBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pot",
      "outputs": [
        {
          "internalType": "contract PotLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "vat",
      "outputs": [
        {
          "internalType": "contract VatLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "join_",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "exit_",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exitAll_",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"daiJoin\",\"outputs\":[{\"internalType\":\"contract JoinLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract GemLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dsrBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exitAll_\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"exit_\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"join_\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pot\",\"outputs\":[{\"internalType\":\"contract PotLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vat\",\"outputs\":[{\"internalType\":\"contract VatLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/TestWrapperSavingDai.sol\":\"TestWrapperSavingDai\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/SavingDai.sol\":{\"keccak256\":\"0x0d8bcbaa66b1b7a7a7d4320749871138eb706f0080fda3586d58b6fe4201589a\",\"urls\":[\"bzz-raw://c27041dca8f284efec46a049ffa33720bd2d2bff32343dd23db27003e085372f\",\"dweb:/ipfs/QmcwJkcgHveM3v345FFYDjTLkRAUyKQCGJDNCNv6b6nGUN\"]},\"/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/TestWrapperSavingDai.sol\":{\"keccak256\":\"0xa6ddaef41cb4737a2ecdc49d1d0bbf8f727903a041b96c3c88ba14dba49562a1\",\"urls\":[\"bzz-raw://2c317f4c0034e43f120c4787b846fbf6bad67de743b2eeda397c343d520b0da0\",\"dweb:/ipfs/QmerF1sDxJozKPVwqKqKEuxWf1rXpXkourW84anHnHR45J\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c806350d1d2271161005b57806350d1d2271461016d578063be22f5461461019b578063c11645bc146101e5578063faa3de931461022f57610088565b8063146554ca1461008d578063357c016a146100bb57806336569e77146100d95780634ba2363a14610123575b600080fd5b6100b9600480360360208110156100a357600080fd5b8101908080359060200190929190505050610239565b005b6100c3610246565b6040518082815260200191505060405180910390f35b6100e16103f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61012b610418565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101996004803603602081101561018357600080fd5b810190808035906020019092919050505061043e565b005b6101a361044b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ed610471565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610237610497565b005b610242816104a2565b5050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bebac86306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156102e857600080fd5b505afa1580156102fc573d6000803e3d6000fd5b505050506040513d602081101561031257600080fd5b810190808051906020019092919050505090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b815260040160206040518083038186803b15801561038f57600080fd5b505afa1580156103a3573d6000803e3d6000fd5b505050506040513d60208110156103b957600080fd5b810190808051906020019092919050505090506b033b2e3c9fd0803ce80000006103e38383610887565b816103ea57fe5b049250505090565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610447816108b3565b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61049f610c98565b50565b60008060009054906101000a900460ff16610525576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4453522f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561058f57600080fd5b505afa1580156105a3573d6000803e3d6000fd5b505050506040513d60208110156105b957600080fd5b8101908080519060200190929190505050421161067857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b815260040160206040518083038186803b15801561063857600080fd5b505afa15801561064c573d6000803e3d6000fd5b505050506040513d602081101561066257600080fd5b810190808051906020019092919050505061071e565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106e257600080fd5b505af11580156106f6573d6000803e3d6000fd5b505050506040513d602081101561070c57600080fd5b81019080805190602001909291905050505b9050600061072c8483611188565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f8661a1826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156107a357600080fd5b505af11580156107b7573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed30866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561086457600080fd5b505af1158015610878573d6000803e3d6000fd5b50505050600192505050919050565b6000808214806108a457508282838502925082816108a157fe5b04145b6108ad57600080fd5b92915050565b60008060009054906101000a900460ff16610936576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4453522f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109a057600080fd5b505afa1580156109b4573d6000803e3d6000fd5b505050506040513d60208110156109ca57600080fd5b81019080805190602001909291905050504211610a8957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b815260040160206040518083038186803b158015610a4957600080fd5b505afa158015610a5d573d6000803e3d6000fd5b505050506040513d6020811015610a7357600080fd5b8101908080519060200190929190505050610b2f565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610af357600080fd5b505af1158015610b07573d6000803e3d6000fd5b505050506040513d6020811015610b1d57600080fd5b81019080805190602001909291905050505b90506000610b3d84836111c4565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633b4da69f30866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610be857600080fd5b505af1158015610bfc573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663049878f3826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610c7557600080fd5b505af1158015610c89573d6000803e3d6000fd5b50505050600192505050919050565b60008060009054906101000a900460ff16610d1b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4453522f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d8357600080fd5b505afa158015610d97573d6000803e3d6000fd5b505050506040513d6020811015610dad57600080fd5b8101908080519060200190929190505050421115610e6c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610e2f57600080fd5b505af1158015610e43573d6000803e3d6000fd5b505050506040513d6020811015610e5957600080fd5b8101908080519060200190929190505050505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f8661a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bebac86306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f4957600080fd5b505afa158015610f5d573d6000803e3d6000fd5b505050506040513d6020811015610f7357600080fd5b81019080805190602001909291905050506040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610fba57600080fd5b505af1158015610fce573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed306b033b2e3c9fd0803ce8000000600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c25b346306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156110bd57600080fd5b505afa1580156110d1573d6000803e3d6000fd5b505050506040513d60208110156110e757600080fd5b8101908080519060200190929190505050816110ff57fe5b046040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561116957600080fd5b505af115801561117d573d6000803e3d6000fd5b505050506001905090565b6000816111b46111a4856b033b2e3c9fd0803ce8000000610887565b6111af8560016111ed565b611207565b816111bb57fe5b04905092915050565b6000816111dd846b033b2e3c9fd0803ce8000000610887565b816111e457fe5b04905092915050565b600082828403915081111561120157600080fd5b92915050565b600082828401915081101561121b57600080fd5b9291505056fea26469706673582212209711aa4cff76c5234d3cba4735f4306499db563fe560cac378162db78b52de3464736f6c63430006030033",
  "sourceMap": "124:323:4:-:0;;;919:42:3;890:72;;;;;;;;;;;;;;;;;;;;998:42;969:72;;;;;;;;;;;;;;;;;;;;1083:42;1048:78;;;;;;;;;;;;;;;;;;;;1167:42;1133:77;;;;;;;;;;;;;;;;;;;;176:54:4;5:9:-1;2:2;;;27:1;24;17:12;2:2;176:54:4;208:14;:12;;;:14;;:::i;:::-;;124:323;;2246:295:3;2287:4;2309:15;;;;;;;;;;;2304:208;;2341:3;;;;;;;;;;;:8;;;2358:3;;;;;;;;;;;2341:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2341:22:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2341:22:3;;;;2378:3;;;;;;;;;;;:8;;;2395:7;;;;;;;;;;;2378:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2378:26:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2378:26:3;;;;2419:8;;;;;;;;;;;:16;;;2444:7;;;;;;;;;;;2459:2;2419:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2419:44:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2419:44:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2419:44:3;;;;;;;;;;;;;;;;;2496:4;2478:15;;:22;;;;;;;;;;;;;;;;;;2304:208;2529:4;2522:11;;2246:295;:::o;124:323:4:-;;;;;;;",
  "deployedSourceMap": "124:323:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;124:323:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;311:65:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;311:65:4;;;;;;;;;;;;;;;;;:::i;:::-;;3339:169:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;890:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;969;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;238:65:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;238:65:4;;;;;;;;;;;;;;;;;:::i;:::-;;1133:77:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1048:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;384:60:4;;;:::i;:::-;;311:65;356:12;364:3;356:7;:12::i;:::-;;311:65;:::o;3339:169:3:-;3382:4;3399:8;3410:3;;;;;;;;;;;:7;;;3426:4;3410:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3410:22:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3410:22:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3410:22:3;;;;;;;;;;;;;;;;3399:33;;3443:8;3454:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24;17:12;2:2;3454:9:3;;;;8::-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3454:9:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3454:9:3;;;;;;;;;;;;;;;;3443:20;;1260:8;3481:13;3485:3;3490;3481;:13::i;:::-;:19;;;;;;3474:26;;;;3339:169;:::o;890:72::-;;;;;;;;;;;;;:::o;969:::-;;;;;;;;;;;;;:::o;238:65:4:-;283:12;291:3;283:7;:12::i;:::-;;238:65;:::o;1133:77:3:-;;;;;;;;;;;;;:::o;1048:78::-;;;;;;;;;;;;;:::o;384:60:4:-;424:12;:10;:12::i;:::-;;384:60::o;2818:263:3:-;2876:4;1979:15;;;;;;;;;;;1971:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2893:8:::1;2911:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2911:9:3;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2911:9:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2911:9:3;;;;;;;;;;;;;;;;2905:3;:15;2904:42;;2937:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2937:9:3;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2937:9:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2937:9:3;;;;;;;;;;;;;;;;2904:42;;;2924:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2924:10:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2924:10:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2924:10:3;;;;;;;;;;;;;;;;2904:42;2893:53;;2957:8;2968:16;2975:3;2980;2968:6;:16::i;:::-;2957:27;;2995:3;;;;;;;;;;;:8;;;3004:3;2995:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2995:13:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2995:13:3;;;;3019:7;;;;;;;;;;;:12;;;3040:4;3047:3;3019:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3019:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3019:32:3;;;;3069:4;3062:11;;;;2818:263:::0;;;:::o;1495:118::-;1547:6;1579:1;1574;:6;:30;;;;1603:1;1598;1593;1589;:5;1585:9;;;1584:15;;;;;;:20;1574:30;1566:39;;12:1:-1;9;2:12;1566:39:3;1495:118;;;;:::o;2549:261::-;2607:4;1979:15;;;;;;;;;;;1971:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2624:8:::1;2642:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2642:9:3;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2642:9:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2642:9:3;;;;;;;;;;;;;;;;2636:3;:15;2635:42;;2668:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2668:9:3;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2668:9:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2668:9:3;;;;;;;;;;;;;;;;2635:42;;;2655:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2655:10:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2655:10:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2655:10:3;;;;;;;;;;;;;;;;2635:42;2624:53;;2688:8;2699:14;2704:3;2709;2699:4;:14::i;:::-;2688:25;;2724:7;;;;;;;;;;;:12;;;2745:4;2752:3;2724:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2724:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2724:32:3;;;;2767:3;;;;;;;;;;;:8;;;2776:3;2767:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2767:13:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2767:13:3;;;;2798:4;2791:11;;;;2549:261:::0;;;:::o;3089:242::-;3142:4;1979:15;;;;;;;;;;;1971:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3169:3:::1;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3169:9:3;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3169:9:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;3169:9:3;;;;;;;;;;;;;;;;3163:3;:15;3159:31;;;3180:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3180:10:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3180:10:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;3180:10:3;;;;;;;;;;;;;;;;;3159:31;3201:3;;;;;;;;;;;:8;;;3210:3;;;;;;;;;;;:7;;;3226:4;3210:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3210:22:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3210:22:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;3210:22:3;;;;;;;;;;;;;;;;3201:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3201:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3201:32:3;;;;3244:7;;;;;;;;;;;:12;;;3265:4;1260:8;3272:3;;;;;;;;;;;:7;;;3288:4;3272:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3272:22:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3272:22:3;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;3272:22:3;;;;;;;;;;;;;;;;:28;;;;;;3244:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;3244:57:3;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;3244:57:3;;;;3319:4;3312:11;;3089:242:::0;:::o;1755:146::-;1810:6;1892:1;1862:27;1866:11;1870:1;1260:8;1866:3;:11::i;:::-;1879:9;1883:1;1886;1879:3;:9::i;:::-;1862:3;:27::i;:::-;:31;;;;;;1858:35;;1755:146;;;;:::o;1619:130::-;1672:6;1740:1;1726:11;1730:1;1260:8;1726:3;:11::i;:::-;:15;;;;;;1722:19;;1619:130;;;;:::o;1385:104::-;1437:6;1479:1;1473;1469;:5;1465:9;;;1464:16;;1456:25;;12:1:-1;9;2:12;1456:25:3;1385:104;;;;:::o;1275:::-;1327:6;1369:1;1363;1359;:5;1355:9;;;1354:16;;1346:25;;12:1:-1;9;2:12;1346:25:3;1275:104;;;;:::o",
  "source": "pragma solidity 0.6.3;\r\n\r\nimport \"./SavingDai.sol\";\r\n\r\n// Wrapper to test the internal functions of the SavingDai contract\r\ncontract TestWrapperSavingDai is SavingDai {\r\n\r\n    constructor() public {\r\n        dsrAuthorize();\r\n    }\r\n\r\n    function join_(uint wad) external {\r\n        dsrJoin(wad);\r\n    }\r\n\r\n    function exit_(uint wad) external {\r\n        dsrExit(wad);\r\n    }\r\n\r\n    function exitAll_() external {\r\n        dsrExitAll();\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Matthias\\Documents\\_uni\\fs2020\\seminar_blockchain\\src\\contracts\\TestWrapperSavingDai.sol",
  "ast": {
    "absolutePath": "/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/TestWrapperSavingDai.sol",
    "exportedSymbols": {
      "TestWrapperSavingDai": [
        1979
      ]
    },
    "id": 1980,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1941,
        "literals": [
          "solidity",
          "0.6",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:4"
      },
      {
        "absolutePath": "/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/SavingDai.sol",
        "file": "./SavingDai.sol",
        "id": 1942,
        "nodeType": "ImportDirective",
        "scope": 1980,
        "sourceUnit": 1940,
        "src": "26:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1943,
              "name": "SavingDai",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1939,
              "src": "157:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SavingDai_$1939",
                "typeString": "contract SavingDai"
              }
            },
            "id": 1944,
            "nodeType": "InheritanceSpecifier",
            "src": "157:9:4"
          }
        ],
        "contractDependencies": [
          1939
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1979,
        "linearizedBaseContracts": [
          1979,
          1939
        ],
        "name": "TestWrapperSavingDai",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1950,
              "nodeType": "Block",
              "src": "197:33:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1947,
                      "name": "dsrAuthorize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1756,
                      "src": "208:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 1948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "208:14:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1949,
                  "nodeType": "ExpressionStatement",
                  "src": "208:14:4"
                }
              ]
            },
            "documentation": null,
            "id": 1951,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "187:2:4"
            },
            "returnParameters": {
              "id": 1946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "197:0:4"
            },
            "scope": 1979,
            "src": "176:54:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1960,
              "nodeType": "Block",
              "src": "272:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1957,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1953,
                        "src": "291:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1956,
                      "name": "dsrJoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1807,
                      "src": "283:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "283:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1959,
                  "nodeType": "ExpressionStatement",
                  "src": "283:12:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "50d1d227",
            "id": 1961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1953,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1961,
                  "src": "253:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1952,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "252:10:4"
            },
            "returnParameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:0:4"
            },
            "scope": 1979,
            "src": "238:65:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1970,
              "nodeType": "Block",
              "src": "345:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1967,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1963,
                        "src": "364:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1966,
                      "name": "dsrExit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1858,
                      "src": "356:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 1968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "356:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1969,
                  "nodeType": "ExpressionStatement",
                  "src": "356:12:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "146554ca",
            "id": 1971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1963,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1971,
                  "src": "326:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "325:10:4"
            },
            "returnParameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:4"
            },
            "scope": 1979,
            "src": "311:65:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1977,
              "nodeType": "Block",
              "src": "413:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1974,
                      "name": "dsrExitAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1909,
                      "src": "424:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 1975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "424:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1976,
                  "nodeType": "ExpressionStatement",
                  "src": "424:12:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "faa3de93",
            "id": 1978,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exitAll_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:4"
            },
            "returnParameters": {
              "id": 1973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:4"
            },
            "scope": 1979,
            "src": "384:60:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1980,
        "src": "124:323:4"
      }
    ],
    "src": "0:449:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/TestWrapperSavingDai.sol",
    "exportedSymbols": {
      "TestWrapperSavingDai": [
        1979
      ]
    },
    "id": 1980,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1941,
        "literals": [
          "solidity",
          "0.6",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:4"
      },
      {
        "absolutePath": "/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/SavingDai.sol",
        "file": "./SavingDai.sol",
        "id": 1942,
        "nodeType": "ImportDirective",
        "scope": 1980,
        "sourceUnit": 1940,
        "src": "26:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1943,
              "name": "SavingDai",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1939,
              "src": "157:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SavingDai_$1939",
                "typeString": "contract SavingDai"
              }
            },
            "id": 1944,
            "nodeType": "InheritanceSpecifier",
            "src": "157:9:4"
          }
        ],
        "contractDependencies": [
          1939
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1979,
        "linearizedBaseContracts": [
          1979,
          1939
        ],
        "name": "TestWrapperSavingDai",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1950,
              "nodeType": "Block",
              "src": "197:33:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1947,
                      "name": "dsrAuthorize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1756,
                      "src": "208:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 1948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "208:14:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1949,
                  "nodeType": "ExpressionStatement",
                  "src": "208:14:4"
                }
              ]
            },
            "documentation": null,
            "id": 1951,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "187:2:4"
            },
            "returnParameters": {
              "id": 1946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "197:0:4"
            },
            "scope": 1979,
            "src": "176:54:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1960,
              "nodeType": "Block",
              "src": "272:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1957,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1953,
                        "src": "291:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1956,
                      "name": "dsrJoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1807,
                      "src": "283:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "283:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1959,
                  "nodeType": "ExpressionStatement",
                  "src": "283:12:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "50d1d227",
            "id": 1961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1953,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1961,
                  "src": "253:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1952,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "252:10:4"
            },
            "returnParameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:0:4"
            },
            "scope": 1979,
            "src": "238:65:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1970,
              "nodeType": "Block",
              "src": "345:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1967,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1963,
                        "src": "364:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1966,
                      "name": "dsrExit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1858,
                      "src": "356:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 1968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "356:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1969,
                  "nodeType": "ExpressionStatement",
                  "src": "356:12:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "146554ca",
            "id": 1971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1963,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1971,
                  "src": "326:8:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "326:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "325:10:4"
            },
            "returnParameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:4"
            },
            "scope": 1979,
            "src": "311:65:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1977,
              "nodeType": "Block",
              "src": "413:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1974,
                      "name": "dsrExitAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1909,
                      "src": "424:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 1975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "424:12:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1976,
                  "nodeType": "ExpressionStatement",
                  "src": "424:12:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "faa3de93",
            "id": 1978,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exitAll_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:4"
            },
            "returnParameters": {
              "id": 1973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:4"
            },
            "scope": 1979,
            "src": "384:60:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1980,
        "src": "124:323:4"
      }
    ],
    "src": "0:449:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.3+commit.8dda9521.Emscripten.clang"
  },
  "networks": {
    "999": {
      "events": {},
      "links": {},
      "address": "0x32fF9398E20e95eE7E5AeA732159C4315553cE00",
      "transactionHash": "0x38e9289e78464fcb6cf08d0d1af5286c7a2805c66b7f62681630e28b6ef3658b"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-13T08:09:38.006Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}