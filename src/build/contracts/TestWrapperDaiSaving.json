{
  "contractName": "TestWrapperDaiSaving",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "join_",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "exit_",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "exitAll_",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"exitAll_\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"exit_\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"join_\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Labor/WebstormProjects/rental-deposit-account/src/contracts/TestWrapperDaiSaving.sol\":\"TestWrapperDaiSaving\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Labor/WebstormProjects/rental-deposit-account/src/contracts/DaiSaving.sol\":{\"keccak256\":\"0xd72fd3e28513e04df2c2245e660eb87f248a3a64b7985d7dcfebe831bf957004\",\"urls\":[\"bzz-raw://782a2e447baa2db76dfff4fe8d5346c42b3a907745c0a7eac9d0969cdf71acf5\",\"dweb:/ipfs/QmYbjha8iTxULu5VyqLYxvgsscfXJJjggeZnJES6ENgrrC\"]},\"/C/Users/Labor/WebstormProjects/rental-deposit-account/src/contracts/TestWrapperDaiSaving.sol\":{\"keccak256\":\"0x0fa683a4ddcd2234ba29d3d6a1899a6f61543c3b0c479407501300ef18fc5554\",\"urls\":[\"bzz-raw://c311aeeddb0fcb2c365dd322241674f8af9fdc5e78c68b60da9e3ada543b205e\",\"dweb:/ipfs/QmZzH3rk5NwceemDc9dugTfMF9TLJz79DNF94x83sWDy7v\"]}},\"version\":1}",
  "bytecode": "0x60806040527311c8d156e1b5fd883e31e9091874f2af80b027756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507319e602e0dc93749ea7afa0c88f4693d4c02102d3600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738c4be23de45f82a4fec7a93f69929bd2a13a4777600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738d68d36d45a34a6ff368069bd0baa32ad49a6092600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561016357600080fd5b50610fcc806101736000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063146554ca1461004657806350d1d22714610074578063faa3de93146100a2575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100ac565b005b6100a06004803603602081101561008a57600080fd5b81019080803590602001909291905050506100b8565b005b6100aa6100c4565b005b6100b5816100ce565b50565b6100c18161042e565b50565b6100cc610a69565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561013a57600080fd5b505af115801561014e573d6000803e3d6000fd5b505050506040513d602081101561016457600080fd5b8101908080519060200190929190505050421161022557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156101e557600080fd5b505af11580156101f9573d6000803e3d6000fd5b505050506040513d602081101561020f57600080fd5b81019080805190602001909291905050506102cb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561028f57600080fd5b505af11580156102a3573d6000803e3d6000fd5b505050506040513d60208110156102b957600080fd5b81019080805190602001909291905050505b905060006102d98383610ed2565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f8661a1826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561035057600080fd5b505af1158015610364573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561041157600080fd5b505af1158015610425573d6000803e3d6000fd5b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3b22fc4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3b22fc4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156105ca57600080fd5b505af11580156105de573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b505050506040513d60208110156106f757600080fd5b8101908080519060200190929190505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561077557600080fd5b505af1158015610789573d6000803e3d6000fd5b505050506040513d602081101561079f57600080fd5b8101908080519060200190929190505050421161086057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561082057600080fd5b505af1158015610834573d6000803e3d6000fd5b505050506040513d602081101561084a57600080fd5b8101908080519060200190929190505050610906565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108ca57600080fd5b505af11580156108de573d6000803e3d6000fd5b505050506040513d60208110156108f457600080fd5b81019080805190602001909291905050505b905060006109148383610f0e565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633b4da69f30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156109bf57600080fd5b505af11580156109d3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663049878f3826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610a4c57600080fd5b505af1158015610a60573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610ad357600080fd5b505af1158015610ae7573d6000803e3d6000fd5b505050506040513d6020811015610afd57600080fd5b8101908080519060200190929190505050421115610bbc57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b7f57600080fd5b505af1158015610b93573d6000803e3d6000fd5b505050506040513d6020811015610ba957600080fd5b8101908080519060200190929190505050505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f8661a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bebac86306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c9957600080fd5b505afa158015610cad573d6000803e3d6000fd5b505050506040513d6020811015610cc357600080fd5b81019080805190602001909291905050506040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610d0a57600080fd5b505af1158015610d1e573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed306b033b2e3c9fd0803ce80000006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c25b346306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e0c57600080fd5b505afa158015610e20573d6000803e3d6000fd5b505050506040513d6020811015610e3657600080fd5b810190808051906020019092919050505081610e4e57fe5b046040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b50505050565b600081610efe610eee856b033b2e3c9fd0803ce8000000610f37565b610ef9856001610f63565b610f7d565b81610f0557fe5b04905092915050565b600081610f27846b033b2e3c9fd0803ce8000000610f37565b81610f2e57fe5b04905092915050565b600080821480610f545750828283850292508281610f5157fe5b04145b610f5d57600080fd5b92915050565b6000828284039150811115610f7757600080fd5b92915050565b6000828284019150811015610f9157600080fd5b9291505056fea265627a7a723158202a3c36051cf1daeb16ab4d9981d707d7b16964cef7ad70d0e15eef3f608a825864736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063146554ca1461004657806350d1d22714610074578063faa3de93146100a2575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100ac565b005b6100a06004803603602081101561008a57600080fd5b81019080803590602001909291905050506100b8565b005b6100aa6100c4565b005b6100b5816100ce565b50565b6100c18161042e565b50565b6100cc610a69565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561013a57600080fd5b505af115801561014e573d6000803e3d6000fd5b505050506040513d602081101561016457600080fd5b8101908080519060200190929190505050421161022557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156101e557600080fd5b505af11580156101f9573d6000803e3d6000fd5b505050506040513d602081101561020f57600080fd5b81019080805190602001909291905050506102cb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561028f57600080fd5b505af11580156102a3573d6000803e3d6000fd5b505050506040513d60208110156102b957600080fd5b81019080805190602001909291905050505b905060006102d98383610ed2565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f8661a1826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561035057600080fd5b505af1158015610364573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561041157600080fd5b505af1158015610425573d6000803e3d6000fd5b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3b22fc4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156104f057600080fd5b505af1158015610504573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3b22fc4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156105ca57600080fd5b505af11580156105de573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b505050506040513d60208110156106f757600080fd5b8101908080519060200190929190505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561077557600080fd5b505af1158015610789573d6000803e3d6000fd5b505050506040513d602081101561079f57600080fd5b8101908080519060200190929190505050421161086057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561082057600080fd5b505af1158015610834573d6000803e3d6000fd5b505050506040513d602081101561084a57600080fd5b8101908080519060200190929190505050610906565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108ca57600080fd5b505af11580156108de573d6000803e3d6000fd5b505050506040513d60208110156108f457600080fd5b81019080805190602001909291905050505b905060006109148383610f0e565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633b4da69f30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156109bf57600080fd5b505af11580156109d3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663049878f3826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610a4c57600080fd5b505af1158015610a60573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610ad357600080fd5b505af1158015610ae7573d6000803e3d6000fd5b505050506040513d6020811015610afd57600080fd5b8101908080519060200190929190505050421115610bbc57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b7f57600080fd5b505af1158015610b93573d6000803e3d6000fd5b505050506040513d6020811015610ba957600080fd5b8101908080519060200190929190505050505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f8661a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bebac86306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c9957600080fd5b505afa158015610cad573d6000803e3d6000fd5b505050506040513d6020811015610cc357600080fd5b81019080805190602001909291905050506040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610d0a57600080fd5b505af1158015610d1e573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed306b033b2e3c9fd0803ce80000006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c25b346306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610e0c57600080fd5b505afa158015610e20573d6000803e3d6000fd5b505050506040513d6020811015610e3657600080fd5b810190808051906020019092919050505081610e4e57fe5b046040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610eb857600080fd5b505af1158015610ecc573d6000803e3d6000fd5b50505050565b600081610efe610eee856b033b2e3c9fd0803ce8000000610f37565b610ef9856001610f63565b610f7d565b81610f0557fe5b04905092915050565b600081610f27846b033b2e3c9fd0803ce8000000610f37565b81610f2e57fe5b04905092915050565b600080821480610f545750828283850292508281610f5157fe5b04145b610f5d57600080fd5b92915050565b6000828284039150811115610f7757600080fd5b92915050565b6000828284019150811015610f9157600080fd5b9291505056fea265627a7a723158202a3c36051cf1daeb16ab4d9981d707d7b16964cef7ad70d0e15eef3f608a825864736f6c63430005100032",
  "sourceMap": "137:250:3:-;;;762:42:0;740:65;;;;;;;;;;;;;;;;;;;;834:42;812:65;;;;;;;;;;;;;;;;;;;;912:42;884:71;;;;;;;;;;;;;;;;;;;;989:42;962:70;;;;;;;;;;;;;;;;;;;;137:250:3;8:9:-1;5:2;;;30:1;27;20:12;5:2;137:250:3;;;;;;;",
  "deployedSourceMap": "137:250:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;137:250:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:62;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;257:62:3;;;;;;;;;;;;;;;;;:::i;:::-;;187;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;187:62:3;;;;;;;;;;;;;;;;;:::i;:::-;;327:57;;;:::i;:::-;;257:62;302:9;307:3;302:4;:9::i;:::-;257:62;:::o;187:::-;232:9;237:3;232:4;:9::i;:::-;187:62;:::o;327:57::-;367:9;:7;:9::i;:::-;327:57::o;2141:210:0:-;2185:8;2203:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;;8::-1;5:2;;;30:1;27;20:12;5:2;2203:9:0;;;;8::-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2203:9:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2203:9:0;;;;;;;;;;;;;;;;2197:3;:15;2196:42;;2229:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;;8::-1;5:2;;;30:1;27;20:12;5:2;2229:9:0;;;;8::-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2229:9:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2229:9:0;;;;;;;;;;;;;;;;2196:42;;;2216:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2216:10:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2216:10:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2216:10:0;;;;;;;;;;;;;;;;2196:42;2185:53;;2249:8;2260:16;2267:3;2272;2260:6;:16::i;:::-;2249:27;;2287:3;;;;;;;;;;;:8;;;2296:3;2287:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2287:13:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2287:13:0;;;;2311:7;;;;;;;;;;;:12;;;2332:4;2339:3;2311:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2311:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2311:32:0;;;;2141:210;;;:::o;1731:402::-;1813:3;;;;;;;;;;;:8;;;1830:3;;;;;;;;;;;1813:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1813:22:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1813:22:0;;;;1846:3;;;;;;;;;;;:8;;;1863:7;;;;;;;;;;;1846:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1846:26:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1846:26:0;;;;1883:8;;;;;;;;;;;:16;;;1908:7;;;;;;;;;;;1923:2;1883:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1883:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1883:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1883:44:0;;;;;;;;;;;;;;;;;1969:8;1987:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;;8::-1;5:2;;;30:1;27;20:12;5:2;1987:9:0;;;;8::-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1987:9:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1987:9:0;;;;;;;;;;;;;;;;1981:3;:15;1980:42;;2013:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;;8::-1;5:2;;;30:1;27;20:12;5:2;2013:9:0;;;;8::-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2013:9:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2013:9:0;;;;;;;;;;;;;;;;1980:42;;;2000:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2000:10:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2000:10:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2000:10:0;;;;;;;;;;;;;;;;1980:42;1969:53;;2033:8;2044:14;2049:3;2054;2044:4;:14::i;:::-;2033:25;;2069:7;;;;;;;;;;;:12;;;2090:4;2097:3;2069:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2069:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2069:32:0;;;;2112:3;;;;;;;;;;;:8;;;2121:3;2112:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2112:13:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2112:13:0;;;;1731:402;;;:::o;2359:189::-;2408:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;;8::-1;5:2;;;30:1;27;20:12;5:2;2408:9:0;;;;8::-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2408:9:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2408:9:0;;;;;;;;;;;;;;;;2402:3;:15;2398:31;;;2419:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2419:10:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2419:10:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2419:10:0;;;;;;;;;;;;;;;;;2398:31;2440:3;;;;;;;;;;;:8;;;2449:3;;;;;;;;;;;:7;;;2465:4;2449:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2449:22:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2449:22:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2449:22:0;;;;;;;;;;;;;;;;2440:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2440:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2440:32:0;;;;2483:7;;;;;;;;;;;:12;;;2504:4;1082:8;2511:3;;;;;;;;;;;:7;;;2527:4;2511:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2511:22:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2511:22:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2511:22:0;;;;;;;;;;;;;;;;:28;;;;;;2483:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2483:57:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2483:57:0;;;;2359:189::o;1577:146::-;1632:6;1714:1;1684:27;1688:11;1692:1;1082:8;1688:3;:11::i;:::-;1701:9;1705:1;1708;1701:3;:9::i;:::-;1684:3;:27::i;:::-;:31;;;;;;1680:35;;1577:146;;;;:::o;1441:130::-;1494:6;1562:1;1548:11;1552:1;1082:8;1548:3;:11::i;:::-;:15;;;;;;1544:19;;1441:130;;;;:::o;1317:118::-;1369:6;1401:1;1396;:6;:30;;;;1425:1;1420;1415;1411;:5;1407:9;;;1406:15;;;;;;:20;1396:30;1388:39;;;;;;1317:118;;;;:::o;1207:104::-;1259:6;1301:1;1295;1291;:5;1287:9;;;1286:16;;1278:25;;;;;;1207:104;;;;:::o;1097:::-;1149:6;1191:1;1185;1181;:5;1177:9;;;1176:16;;1168:25;;;;;;1097:104;;;;:::o",
  "source": "pragma solidity >= 0.5.15  < 0.6.0;\r\n\r\nimport \"./DaiSaving.sol\";\r\n\r\n// Wrapper to test the internal functions of the DaiSaving contract\r\ncontract TestWrapperDaiSaving is DaiSaving {\r\n    function join_(uint wad) external {\r\n        join(wad);\r\n    }\r\n\r\n    function exit_(uint wad) external {\r\n        exit(wad);\r\n    }\r\n\r\n    function exitAll_() external {\r\n        exitAll();\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Labor\\WebstormProjects\\rental-deposit-account\\src\\contracts\\TestWrapperDaiSaving.sol",
  "ast": {
    "absolutePath": "/C/Users/Labor/WebstormProjects/rental-deposit-account/src/contracts/TestWrapperDaiSaving.sol",
    "exportedSymbols": {
      "TestWrapperDaiSaving": [
        1189
      ]
    },
    "id": 1190,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1158,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".15",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:35:3"
      },
      {
        "absolutePath": "/C/Users/Labor/WebstormProjects/rental-deposit-account/src/contracts/DaiSaving.sol",
        "file": "./DaiSaving.sol",
        "id": 1159,
        "nodeType": "ImportDirective",
        "scope": 1190,
        "sourceUnit": 370,
        "src": "39:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1160,
              "name": "DaiSaving",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 369,
              "src": "170:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaiSaving_$369",
                "typeString": "contract DaiSaving"
              }
            },
            "id": 1161,
            "nodeType": "InheritanceSpecifier",
            "src": "170:9:3"
          }
        ],
        "contractDependencies": [
          369
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1189,
        "linearizedBaseContracts": [
          1189,
          369
        ],
        "name": "TestWrapperDaiSaving",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1170,
              "nodeType": "Block",
              "src": "221:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1167,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "237:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1166,
                      "name": "join",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "232:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "232:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "232:9:3"
                }
              ]
            },
            "documentation": null,
            "id": 1171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join_",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1163,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "202:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "202:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "201:10:3"
            },
            "returnParameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:3"
            },
            "scope": 1189,
            "src": "187:62:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1180,
              "nodeType": "Block",
              "src": "291:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1177,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "307:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1176,
                      "name": "exit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "302:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "302:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "302:9:3"
                }
              ]
            },
            "documentation": null,
            "id": 1181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit_",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1173,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "272:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1172,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "271:10:3"
            },
            "returnParameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "291:0:3"
            },
            "scope": 1189,
            "src": "257:62:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1187,
              "nodeType": "Block",
              "src": "356:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1184,
                      "name": "exitAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "367:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "367:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1186,
                  "nodeType": "ExpressionStatement",
                  "src": "367:9:3"
                }
              ]
            },
            "documentation": null,
            "id": 1188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exitAll_",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:2:3"
            },
            "returnParameters": {
              "id": 1183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:3"
            },
            "scope": 1189,
            "src": "327:57:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1190,
        "src": "137:250:3"
      }
    ],
    "src": "0:389:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Labor/WebstormProjects/rental-deposit-account/src/contracts/TestWrapperDaiSaving.sol",
    "exportedSymbols": {
      "TestWrapperDaiSaving": [
        1189
      ]
    },
    "id": 1190,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1158,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".15",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:35:3"
      },
      {
        "absolutePath": "/C/Users/Labor/WebstormProjects/rental-deposit-account/src/contracts/DaiSaving.sol",
        "file": "./DaiSaving.sol",
        "id": 1159,
        "nodeType": "ImportDirective",
        "scope": 1190,
        "sourceUnit": 370,
        "src": "39:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1160,
              "name": "DaiSaving",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 369,
              "src": "170:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaiSaving_$369",
                "typeString": "contract DaiSaving"
              }
            },
            "id": 1161,
            "nodeType": "InheritanceSpecifier",
            "src": "170:9:3"
          }
        ],
        "contractDependencies": [
          369
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1189,
        "linearizedBaseContracts": [
          1189,
          369
        ],
        "name": "TestWrapperDaiSaving",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1170,
              "nodeType": "Block",
              "src": "221:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1167,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1163,
                        "src": "237:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1166,
                      "name": "join",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "232:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "232:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "232:9:3"
                }
              ]
            },
            "documentation": null,
            "id": 1171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join_",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1163,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 1171,
                  "src": "202:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "202:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "201:10:3"
            },
            "returnParameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:3"
            },
            "scope": 1189,
            "src": "187:62:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1180,
              "nodeType": "Block",
              "src": "291:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1177,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "307:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1176,
                      "name": "exit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "302:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "302:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "302:9:3"
                }
              ]
            },
            "documentation": null,
            "id": 1181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit_",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1173,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "272:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1172,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "271:10:3"
            },
            "returnParameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "291:0:3"
            },
            "scope": 1189,
            "src": "257:62:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1187,
              "nodeType": "Block",
              "src": "356:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1184,
                      "name": "exitAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "367:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "367:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1186,
                  "nodeType": "ExpressionStatement",
                  "src": "367:9:3"
                }
              ]
            },
            "documentation": null,
            "id": 1188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exitAll_",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:2:3"
            },
            "returnParameters": {
              "id": 1183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:3"
            },
            "scope": 1189,
            "src": "327:57:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1190,
        "src": "137:250:3"
      }
    ],
    "src": "0:389:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "999": {
      "events": {},
      "links": {},
      "address": "0x6E9572192AaE21294A90EC753aB1d77bF093A105",
      "transactionHash": "0x8e51aba3e73d7e88f9214c7a0f1a93cba258ed422fcb25cb8e304b00a26f0a19"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-03T16:31:18.753Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}