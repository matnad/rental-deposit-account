{
  "contractName": "TestWrapperSavingDai",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "join_",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "exit_",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exitAll_",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.3+commit.8dda9521\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"exitAll_\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"exit_\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"join_\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/TestWrapperSavingDai.sol\":\"TestWrapperSavingDai\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/SavingDai.sol\":{\"keccak256\":\"0xc94fcb3f9ac4a551d7fc456357494c80ae0188787026f7cbc6e9f699ad52b589\",\"urls\":[\"bzz-raw://c42aeb3e00bacfaa50893a63065f73768fe2a018dca53658a899e6498372bf17\",\"dweb:/ipfs/QmSU3bTwjqTFroakHDzEsuvZPujwf3d9LxhYYgYdkJQgAc\"]},\"/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/TestWrapperSavingDai.sol\":{\"keccak256\":\"0x821d6fe256659b055a37c83d7245004a66d35531ad350441983f750221f2323f\",\"urls\":[\"bzz-raw://766f3f7bca3bbca2d5e2782cfd53f1eca3ec844a567f9487891a2a337648958c\",\"dweb:/ipfs/QmQgpFYKkfg184xjzZs7kCHL5gUBpQudTQPLbChcq9VAbR\"]}},\"version\":1}",
  "bytecode": "0x60806040527311c8d156e1b5fd883e31e9091874f2af80b02775600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507319e602e0dc93749ea7afa0c88f4693d4c02102d3600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738c4be23de45f82a4fec7a93f69929bd2a13a4777600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738d68d36d45a34a6ff368069bd0baa32ad49a6092600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561016457600080fd5b50610e76806101746000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063146554ca1461004657806350d1d22714610074578063faa3de93146100a2575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100ac565b005b6100a06004803603602081101561008a57600080fd5b81019080803590602001909291905050506100b8565b005b6100aa6100c4565b005b6100b5816100ce565b50565b6100c1816104af565b50565b6100cc610890565b565b6000809054906101000a900460ff1661014f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4453522f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156101bb57600080fd5b505af11580156101cf573d6000803e3d6000fd5b505050506040513d60208110156101e557600080fd5b810190808051906020019092919050505042116102a657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561026657600080fd5b505af115801561027a573d6000803e3d6000fd5b505050506040513d602081101561029057600080fd5b810190808051906020019092919050505061034c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561031057600080fd5b505af1158015610324573d6000803e3d6000fd5b505050506040513d602081101561033a57600080fd5b81019080805190602001909291905050505b9050600061035a8383610d7b565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f8661a1826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156103d157600080fd5b505af11580156103e5573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b50505050505050565b6000809054906101000a900460ff16610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4453522f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b505050506040513d60208110156105c657600080fd5b8101908080519060200190929190505050421161068757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561064757600080fd5b505af115801561065b573d6000803e3d6000fd5b505050506040513d602081101561067157600080fd5b810190808051906020019092919050505061072d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106f157600080fd5b505af1158015610705573d6000803e3d6000fd5b505050506040513d602081101561071b57600080fd5b81019080805190602001909291905050505b9050600061073b8383610db7565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633b4da69f30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156107e657600080fd5b505af11580156107fa573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663049878f3826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561087357600080fd5b505af1158015610887573d6000803e3d6000fd5b50505050505050565b6000809054906101000a900460ff16610911576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4453522f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561097b57600080fd5b505af115801561098f573d6000803e3d6000fd5b505050506040513d60208110156109a557600080fd5b8101908080519060200190929190505050421115610a6457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b505050506040513d6020811015610a5157600080fd5b8101908080519060200190929190505050505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f8661a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bebac86306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b4157600080fd5b505afa158015610b55573d6000803e3d6000fd5b505050506040513d6020811015610b6b57600080fd5b81019080805190602001909291905050506040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610bb257600080fd5b505af1158015610bc6573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed306b033b2e3c9fd0803ce8000000600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c25b346306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610cb557600080fd5b505afa158015610cc9573d6000803e3d6000fd5b505050506040513d6020811015610cdf57600080fd5b810190808051906020019092919050505081610cf757fe5b046040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610d6157600080fd5b505af1158015610d75573d6000803e3d6000fd5b50505050565b600081610da7610d97856b033b2e3c9fd0803ce8000000610de0565b610da2856001610e0c565b610e26565b81610dae57fe5b04905092915050565b600081610dd0846b033b2e3c9fd0803ce8000000610de0565b81610dd757fe5b04905092915050565b600080821480610dfd5750828283850292508281610dfa57fe5b04145b610e0657600080fd5b92915050565b6000828284039150811115610e2057600080fd5b92915050565b6000828284019150811015610e3a57600080fd5b9291505056fea264697066735822122070c4a769c07a4a1b64c7d8e1216fdb919bceae6a12de688e02c920986726b9c964736f6c63430006030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063146554ca1461004657806350d1d22714610074578063faa3de93146100a2575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100ac565b005b6100a06004803603602081101561008a57600080fd5b81019080803590602001909291905050506100b8565b005b6100aa6100c4565b005b6100b5816100ce565b50565b6100c1816104af565b50565b6100cc610890565b565b6000809054906101000a900460ff1661014f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4453522f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156101bb57600080fd5b505af11580156101cf573d6000803e3d6000fd5b505050506040513d60208110156101e557600080fd5b810190808051906020019092919050505042116102a657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561026657600080fd5b505af115801561027a573d6000803e3d6000fd5b505050506040513d602081101561029057600080fd5b810190808051906020019092919050505061034c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561031057600080fd5b505af1158015610324573d6000803e3d6000fd5b505050506040513d602081101561033a57600080fd5b81019080805190602001909291905050505b9050600061035a8383610d7b565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f8661a1826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156103d157600080fd5b505af11580156103e5573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b50505050505050565b6000809054906101000a900460ff16610530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4453522f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b505050506040513d60208110156105c657600080fd5b8101908080519060200190929190505050421161068757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561064757600080fd5b505af115801561065b573d6000803e3d6000fd5b505050506040513d602081101561067157600080fd5b810190808051906020019092919050505061072d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106f157600080fd5b505af1158015610705573d6000803e3d6000fd5b505050506040513d602081101561071b57600080fd5b81019080805190602001909291905050505b9050600061073b8383610db7565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633b4da69f30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156107e657600080fd5b505af11580156107fa573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663049878f3826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561087357600080fd5b505af1158015610887573d6000803e3d6000fd5b50505050505050565b6000809054906101000a900460ff16610911576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4453522f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561097b57600080fd5b505af115801561098f573d6000803e3d6000fd5b505050506040513d60208110156109a557600080fd5b8101908080519060200190929190505050421115610a6457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b505050506040513d6020811015610a5157600080fd5b8101908080519060200190929190505050505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f8661a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bebac86306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b4157600080fd5b505afa158015610b55573d6000803e3d6000fd5b505050506040513d6020811015610b6b57600080fd5b81019080805190602001909291905050506040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610bb257600080fd5b505af1158015610bc6573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed306b033b2e3c9fd0803ce8000000600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c25b346306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610cb557600080fd5b505afa158015610cc9573d6000803e3d6000fd5b505050506040513d6020811015610cdf57600080fd5b810190808051906020019092919050505081610cf757fe5b046040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610d6157600080fd5b505af1158015610d75573d6000803e3d6000fd5b50505050565b600081610da7610d97856b033b2e3c9fd0803ce8000000610de0565b610da2856001610e0c565b610e26565b81610dae57fe5b04905092915050565b600081610dd0846b033b2e3c9fd0803ce8000000610de0565b81610dd757fe5b04905092915050565b600080821480610dfd5750828283850292508281610dfa57fe5b04145b610e0657600080fd5b92915050565b6000828284039150811115610e2057600080fd5b92915050565b6000828284019150811015610e3a57600080fd5b9291505056fea264697066735822122070c4a769c07a4a1b64c7d8e1216fdb919bceae6a12de688e02c920986726b9c964736f6c63430006030033",
  "sourceMap": "124:250:3:-:0;;;793:42:2;771:65;;;;;;;;;;;;;;;;;;;;865:42;843:65;;;;;;;;;;;;;;;;;;;;943:42;915:71;;;;;;;;;;;;;;;;;;;;1020:42;993:70;;;;;;;;;;;;;;;;;;;;124:250:3;5:9:-1;2:2;;;27:1;24;17:12;2:2;124:250:3;;;;;;;",
  "deployedSourceMap": "124:250:3:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;124:250:3;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;244:62:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;244:62:3;;;;;;;;;;;;;;;;;:::i;:::-;;174;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;174:62:3;;;;;;;;;;;;;;;;;:::i;:::-;;314:57;;;:::i;:::-;;244:62;289:9;294:3;289:4;:9::i;:::-;244:62;:::o;174:::-;219:9;224:3;219:4;:9::i;:::-;174:62;:::o;314:57::-;354:9;:7;:9::i;:::-;314:57::o;2483:221:2:-;1829:12;;;;;;;;;;;1821:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:8:::1;2556:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2556:9:2;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2556:9:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2556:9:2;;;;;;;;;;;;;;;;2550:3;:15;2549:42;;2582:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2582:9:2;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2582:9:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2582:9:2;;;;;;;;;;;;;;;;2549:42;;;2569:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2569:10:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2569:10:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2569:10:2;;;;;;;;;;;;;;;;2549:42;2538:53;;2602:8;2613:16;2620:3;2625;2613:6;:16::i;:::-;2602:27;;2640:3;;;;;;;;;;;:8;;;2649:3;2640:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2640:13:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2640:13:2;;;;2664:7;;;;;;;;;;;:12;;;2685:4;2692:3;2664:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2664:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2664:32:2;;;;1875:1;;2483:221:::0;:::o;2256:219::-;1829:12;;;;;;;;;;;1821:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2311:8:::1;2329:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2329:9:2;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2329:9:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2329:9:2;;;;;;;;;;;;;;;;2323:3;:15;2322:42;;2355:3;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2355:9:2;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2355:9:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2355:9:2;;;;;;;;;;;;;;;;2322:42;;;2342:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2342:10:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2342:10:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2342:10:2;;;;;;;;;;;;;;;;2322:42;2311:53;;2375:8;2386:14;2391:3;2396;2386:4;:14::i;:::-;2375:25;;2411:7;;;;;;;;;;;:12;;;2432:4;2439:3;2411:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2411:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2411:32:2;;;;2454:3;;;;;;;;;;;:8;;;2463:3;2454:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2454:13:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2454:13:2;;;;1875:1;;2256:219:::0;:::o;2712:200::-;1829:12;;;;;;;;;;;1821:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2772:3:::1;;;;;;;;;;;:7;;;:9;;;;;;;;;;;;;;;;;;;;;;;5::-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2772:9:2;;;;8::-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2772:9:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2772:9:2;;;;;;;;;;;;;;;;2766:3;:15;2762:31;;;2783:3;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2783:10:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2783:10:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2783:10:2;;;;;;;;;;;;;;;;;2762:31;2804:3;;;;;;;;;;;:8;;;2813:3;;;;;;;;;;;:7;;;2829:4;2813:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2813:22:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2813:22:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2813:22:2;;;;;;;;;;;;;;;;2804:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2804:32:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2804:32:2;;;;2847:7;;;;;;;;;;;:12;;;2868:4;1113:8;2875:3;;;;;;;;;;;:7;;;2891:4;2875:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2875:22:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2875:22:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;2875:22:2;;;;;;;;;;;;;;;;:28;;;;;;2847:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;2847:57:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2847:57:2;;;;2712:200::o:0;1608:146::-;1663:6;1745:1;1715:27;1719:11;1723:1;1113:8;1719:3;:11::i;:::-;1732:9;1736:1;1739;1732:3;:9::i;:::-;1715:3;:27::i;:::-;:31;;;;;;1711:35;;1608:146;;;;:::o;1472:130::-;1525:6;1593:1;1579:11;1583:1;1113:8;1579:3;:11::i;:::-;:15;;;;;;1575:19;;1472:130;;;;:::o;1348:118::-;1400:6;1432:1;1427;:6;:30;;;;1456:1;1451;1446;1442;:5;1438:9;;;1437:15;;;;;;:20;1427:30;1419:39;;12:1:-1;9;2:12;1419:39:2;1348:118;;;;:::o;1238:104::-;1290:6;1332:1;1326;1322;:5;1318:9;;;1317:16;;1309:25;;12:1:-1;9;2:12;1309:25:2;1238:104;;;;:::o;1128:::-;1180:6;1222:1;1216;1212;:5;1208:9;;;1207:16;;1199:25;;12:1:-1;9;2:12;1199:25:2;1128:104;;;;:::o",
  "source": "pragma solidity 0.6.3;\r\n\r\nimport \"./SavingDai.sol\";\r\n\r\n// Wrapper to test the internal functions of the SavingDai contract\r\ncontract TestWrapperSavingDai is SavingDai {\r\n    function join_(uint wad) external {\r\n        join(wad);\r\n    }\r\n\r\n    function exit_(uint wad) external {\r\n        exit(wad);\r\n    }\r\n\r\n    function exitAll_() external {\r\n        exitAll();\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Matthias\\Documents\\_uni\\fs2020\\seminar_blockchain\\src\\contracts\\TestWrapperSavingDai.sol",
  "ast": {
    "absolutePath": "/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/TestWrapperSavingDai.sol",
    "exportedSymbols": {
      "TestWrapperSavingDai": [
        1296
      ]
    },
    "id": 1297,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1265,
        "literals": [
          "solidity",
          "0.6",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/SavingDai.sol",
        "file": "./SavingDai.sol",
        "id": 1266,
        "nodeType": "ImportDirective",
        "scope": 1297,
        "sourceUnit": 1264,
        "src": "26:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1267,
              "name": "SavingDai",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1263,
              "src": "157:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SavingDai_$1263",
                "typeString": "contract SavingDai"
              }
            },
            "id": 1268,
            "nodeType": "InheritanceSpecifier",
            "src": "157:9:3"
          }
        ],
        "contractDependencies": [
          1263
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1296,
        "linearizedBaseContracts": [
          1296,
          1263
        ],
        "name": "TestWrapperSavingDai",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "208:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1274,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "224:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1273,
                      "name": "join",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "219:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "219:9:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "219:9:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "50d1d227",
            "id": 1278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1270,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1278,
                  "src": "189:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "189:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "188:10:3"
            },
            "returnParameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "208:0:3"
            },
            "scope": 1296,
            "src": "174:62:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1287,
              "nodeType": "Block",
              "src": "278:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1284,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "294:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1283,
                      "name": "exit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1215,
                      "src": "289:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "289:9:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1286,
                  "nodeType": "ExpressionStatement",
                  "src": "289:9:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "146554ca",
            "id": 1288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1280,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1288,
                  "src": "259:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "258:10:3"
            },
            "returnParameters": {
              "id": 1282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:0:3"
            },
            "scope": 1296,
            "src": "244:62:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "343:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1291,
                      "name": "exitAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1262,
                      "src": "354:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "354:9:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1293,
                  "nodeType": "ExpressionStatement",
                  "src": "354:9:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "faa3de93",
            "id": 1295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exitAll_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:2:3"
            },
            "returnParameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:3"
            },
            "scope": 1296,
            "src": "314:57:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1297,
        "src": "124:250:3"
      }
    ],
    "src": "0:376:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/TestWrapperSavingDai.sol",
    "exportedSymbols": {
      "TestWrapperSavingDai": [
        1296
      ]
    },
    "id": 1297,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1265,
        "literals": [
          "solidity",
          "0.6",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "absolutePath": "/C/Users/Matthias/Documents/_uni/fs2020/seminar_blockchain/src/contracts/SavingDai.sol",
        "file": "./SavingDai.sol",
        "id": 1266,
        "nodeType": "ImportDirective",
        "scope": 1297,
        "sourceUnit": 1264,
        "src": "26:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1267,
              "name": "SavingDai",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1263,
              "src": "157:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SavingDai_$1263",
                "typeString": "contract SavingDai"
              }
            },
            "id": 1268,
            "nodeType": "InheritanceSpecifier",
            "src": "157:9:3"
          }
        ],
        "contractDependencies": [
          1263
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1296,
        "linearizedBaseContracts": [
          1296,
          1263
        ],
        "name": "TestWrapperSavingDai",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "208:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1274,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "224:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1273,
                      "name": "join",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "219:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "219:9:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "219:9:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "50d1d227",
            "id": 1278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1270,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1278,
                  "src": "189:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "189:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "188:10:3"
            },
            "returnParameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "208:0:3"
            },
            "scope": 1296,
            "src": "174:62:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1287,
              "nodeType": "Block",
              "src": "278:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1284,
                        "name": "wad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "294:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1283,
                      "name": "exit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1215,
                      "src": "289:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "289:9:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1286,
                  "nodeType": "ExpressionStatement",
                  "src": "289:9:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "146554ca",
            "id": 1288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1280,
                  "name": "wad",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1288,
                  "src": "259:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "258:10:3"
            },
            "returnParameters": {
              "id": 1282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:0:3"
            },
            "scope": 1296,
            "src": "244:62:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "343:28:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1291,
                      "name": "exitAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1262,
                      "src": "354:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "354:9:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1293,
                  "nodeType": "ExpressionStatement",
                  "src": "354:9:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "faa3de93",
            "id": 1295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exitAll_",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:2:3"
            },
            "returnParameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:3"
            },
            "scope": 1296,
            "src": "314:57:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1297,
        "src": "124:250:3"
      }
    ],
    "src": "0:376:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.3+commit.8dda9521.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-04T10:01:56.210Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}